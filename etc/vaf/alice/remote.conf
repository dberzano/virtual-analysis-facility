#!/bin/bash

#
# alice/remote.conf -- by Dario Berzano <dario.berzano@cern.ch>
#
# Part of virtual-analysis-facility.
#
# Remote system configuration for using VAF in ALICE. This script should not be
# modified. Custom variables are to be set in user scripts.
#

# Snapshot LD_LIBRARY_PATH
Saved_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"

# ALICE environment: set AliRoot Core or AliPhysics, and their dependencies
source /cvmfs/alice.cern.ch/etc/login.sh
if [[ $VafAliPhysicsVersion != '' ]] ; then
  echo $_LMFILES_ | grep -q AliPhysics/$VafAliPhysicsVersion || eval `alienv printenv VO_ALICE@AliPhysics::$VafAliPhysicsVersion`
else
  echo $_LMFILES_ | grep -q AliRoot/$VafAliRootVersion || eval `alienv printenv VO_ALICE@AliRoot::$VafAliRootVersion`
fi

# FastJet (CGAL and other possible dependencies automatically set)
if [[ "$VafFastJetVersion" != '' ]] ; then
  eval $( alienv printenv "VO_ALICE@fastjet::$VafFastJetVersion" )
fi

# Works around some libboost problems
export LC_ALL=C

# AliEn and Grid-specific variables
export GCLIENT_SERVER_LIST="pcapiserv03.cern.ch:10000|"
export X509_USER_PROXY=/tmp/x509up_u$UID
[[ "$X509_CERT_DIR" == '' ]] && export X509_CERT_DIR=$(dirname $(which aliensh))/../../globus/share/certificates

# Maxmimum time PoD Agents are kept waiting in the HTCondor queue. After that
# time they are removed and need to be resubmitted
PoDAgentWaitExpiry_Secs=900

# PoD directories: none on AFS, use /tmp!
PoDWorkDir=/tmp/pod-wd-$USER
PoDSandboxDir=/tmp/pod-sandbox-$USER
PoDLogDir=/tmp/pod-log-$USER
PoDCfgDir=$HOME/.PoD

# PoD configurations
PoDCfg="${PoDCfgDir}/PoD.cfg"
PoDXpd="${PoDCfgDir}/user_xpd.cf0"
PoDCondor="${PoDCfgDir}/Job.condor.option"

mkdir -p "$PoDWorkDir" "$PoDSandboxDir" "$PoDLogDir" "$PoDCfgDir"

# Extra configuration for xproofd: datasets and workaround for connection timeouts (ROOT v5-34-08)
cat > "$PoDXpd" <<_EndOfXpdCf_
xpd.datasetsrc alien cache:/tmp/ali-ds-cache urltemplate:$VafDataSetStorage cacheexpiresecs:3600
xpd.intwait 300
$([[ hostname -d == cern.ch ]] && echo 'xpd.putrc +ProofServ.Monitoring: MonaLisa aliendb1.cern.ch PROOF::CAF::STORAGE')
_EndOfXpdCf_

# Custom PoD.cfg file modifictions
if [ -e "$PoDCfg" ] ; then

  # Append custom lines to HTCondor job descriptions
  sed -e 's#^options_file.*condor.*$#options_file='"$PoDCondor"'#' -i "$PoDCfg"

  # Turn off packet forwarding
  sed -e 's#^\(packet_forwarding\)=.*$#\1=no#' -i "$PoDCfg"

  # Directories: change only [server] entries, do not change [worker] entries
  # See http://stackoverflow.com/questions/9053100/sed-regex-and-substring-negation
  sed -e '/^work_dir=\$POD_LOCATION/b ; s|^\(work_dir\)=.*$|\1='"$PoDWorkDir"'|' -i "$PoDCfg"
  sed -e '/^logfile_dir=\$POD_LOCATION/b ; s|^\(logfile_dir\)=.*$|\1='"$PoDLogDir"'|' -i "$PoDCfg"
  sed -e 's|^\(sandbox_dir\)=.*$|\1='"$PoDSandboxDir"'|' -i "$PoDCfg"

  # Decrease idle time before agents commit suicide (default=1800 s, ours=1600 s)
  sed -e 's|^\(agent_shutdown_if_idle_for_sec\)=.*$|\1=1600|' -i "$PoDCfg"

  # Patterns for proof.conf lines
  sed -e 's#^\(proof_cfg_entry_pattern\)=.*$#\1=worker %user%@%ipv4% port=%port%#' -i "$PoDCfg"

  # Do we have master pattern?
  if grep -q proof_cfg_master_pattern "$PoDCfg" ; then
    sed -e 's|^\(proof_cfg_master_pattern\)=.*$|\1=master %ipv4%|' -i "$PoDCfg"
  else
    sed -e 's|^\(proof_cfg_entry_pattern=.*$\)|\1\nproof_cfg_master_pattern=master %ipv4%|' -i "$PoDCfg"
  fi

  # Do we have "use IPs"?
  if grep -q use_ip_instead_of_host "$PoDCfg" ; then
    sed -e 's|^\(use_ip_instead_of_host\)=.*$|\1=yes|' -i "$PoDCfg"
  else
    sed -e 's|^\(proof_cfg_master_pattern=.*$\)|\1\nuse_ip_instead_of_host=yes|' -i "$PoDCfg"
  fi

fi

# Our custom HTCondor lines
cat > $HOME/.PoD/Job.condor.option <<_EndOfCondor_
periodic_remove = (JobStatus == 1) && ((CurrentTime - EnteredCurrentStatus) > $PoDAgentWaitExpiry_Secs)
_EndOfCondor_

# Prepares the script for the workers environment
WorkerEnv=$HOME/.PoD/user_worker_env.sh
cat > "$WorkerEnv" <<_EndOfEnv_
touch "$X509_USER_PROXY"
chmod 0600 "$X509_USER_PROXY"
echo -n "$GridProxyBase64" | base64 -di | gunzip > "$X509_USER_PROXY"
_EndOfEnv_

# Sets worker environment here on master too
source "$WorkerEnv"
